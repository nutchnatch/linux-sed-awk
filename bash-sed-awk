###GREP INTRO####
#See program version:
$ declare -f | grep --version

$grep --version --> shows grep's version

$sed --version --> shows the version of sed

#get a specific function with grep - grep uses a regular expression (easy way to show the function names)
$declare -f | grep '^[a-z_]'

$declare -f --> show functions

#search for a word in a file
$ grep PS1 /etc/profile
$ grep ^user /etc/password --> search for all that starts by user


####SED INTRO###
$sed 'p' /etc/newsyslog.conf ---> prints the content of newsyslog.conf

$ sed -n 'p' /etc/newsyslog.conf  --> suppress the standard output - shows obly lines maching the pattern

$ sed -n ' 1,5 p' /etc/newsyslog.conf --> prints only lines one to 5

$ sed -n ' /^# entries/ p' /etc/newsyslog.conf --> prints only lines starting with "# entries" (regex)

$ sed ' /^#/ d' /etc/newsyslog.conf --> print entries, removing the comments (#) - "d" option is used to delete

$ sed ' /^#/ d; /^$/ d' /etc/newsyslog.conf --> print entries, removing the comments, and removing empty lines(/^$) - "$" is the empty line starter

$ sed ' /^version/ d; /^$/ d' Downloads/docker-compose.yaml --> print content without liones starting with "version"

sudo sed -i.bak'/^version/ d ; /^$/ d' Downloads/docker-compose.yaml --> -i options edit file content; .bak creates a backup file before changing te file



### AWK INTRO### --  programming language containing a lot of good tools
$ awk ' {print } ' Downloads/docker-compose.yaml --> prints the content of the file

$ awk ' BEGIN {print "yaml file" } { print} END { print NR  } ' Downloads/docker-compose.yaml --> add Begin block (printed at begin) and End block (print at tne end - NR line number)

$ awk ' BEGIN { print "yaml file" } { print NR, $0} END { print NR  } ' Downloads/docker-compose.yaml --> print as before, and adding line number (NR) and the entire line ($0)

$ ifconfig p2p0 | awk -F":" '/ether/{print $3 $4 $5 $6 $7}' -> get the machine address for p2p0, spliting the output by ":" (-F":") and printing all starting with "ether", printing only filds 3,4,5,6 and 7

$ ifconfig p2p0 | awk -F":" '/ether/{print $3 $4 $5 $6 $7}'

$ ifconfig p2p0 | awk -F":" '/ether/{print toupper($3 $4 $5 $6 $7)}' --> returns an uppercase version of the same output


### GREP ####
#Global Regular Expression and Printing - alows to search output files

$ grep --help --> sees grep manual

$ man grep --> returns grep manual

$ ifconfig p2p0 | grep ether -> search for "ether" entry in machine config

$ ifconfig p2p0 | grep -v ether --> revert the above search

$ grep log Downloads/* --> search for log on multiple files

$ grep log Downloads/* --> search "log" in the list of dirs

$ grep -c services Downloads/docker-compose.yaml --> counts how many times "services" word appear on the file

$ grep pam_deny /etc/pam.d/* --> search for pam_deny file in a list of files

$ sysctl -a | grep -c name --> count the number of processors on the machine

$ cat !$ --> go back and look at the last argument


